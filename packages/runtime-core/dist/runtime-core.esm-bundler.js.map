{"version":3,"file":"runtime-core.esm-bundler.js","sources":["../../shared/src/index.ts","../../reactivity/src/effect.ts","../../reactivity/src/baseHandlers.ts","../../reactivity/src/reactive.ts","../src/vnode.ts","../src/apiCreateApp.ts","../src/componentPublicInstance.ts","../src/component.ts","../src/scheduler.ts","../src/renderer.ts","../src/h.ts"],"sourcesContent":["export const isObject = (value) => typeof value == 'object' && value !== null;\nexport const extend = Object.assign;\nexport const isArray = Array.isArray;\nexport const isFunction = (value) => typeof value == 'function';\nexport const isNumber = (value) => typeof value == 'number';\nexport const isString = (value) => typeof value === 'string';\nexport const isIntegerKey = (key) => parseInt(key) + '' === key;\n\nlet hasOwnpRroperty = Object.prototype.hasOwnProperty;\nexport const hasOwn = (target, key) => hasOwnpRroperty.call(target, key);\n\nexport const hasChanged = (oldValue, value) => oldValue !== value;\n\nexport * from './shapeFlag';\n","import { isArray, isIntegerKey } from '@vue/shared/src';\nimport { TriggerOrTypes } from './operators';\n\nexport function effect(fn, options: any = {}) {\n  // 我需要让这个effect变成响应的effect，可以做到数据变化重新执行\n  const effect = createReactiveEffect(fn, options);\n  if (!options.lazy) {\n    // 默认的effect会先执行\n    effect(); // 响应式的effect默认会先执行一次\n  }\n  return effect;\n}\nlet uid = 0;\nlet activeEffect; // 存储当前的effect\nconst effectStack = [];\nfunction createReactiveEffect(fn, options) {\n  const effect = function reactiveEffect() {\n    if (!effectStack.includes(effect)) {\n      // 保证effect没有加入到effectStack中\n      try {\n        effectStack.push(effect);\n        activeEffect = effect;\n        return fn(); // 函数执行时会取值  会执行get方法\n      } finally {\n        effectStack.pop();\n        activeEffect = effectStack[effectStack.length - 1];\n      }\n    }\n  };\n  effect.id = uid++; // 制作一个effect标识 用于区分effect\n  effect._isEffect = true; // 用于标识这个是响应式effect\n  effect.raw = fn; // 保留effect对应的原函数\n  effect.options = options; // 在effect上保存用户的属性\n  return effect;\n}\n// 让某个对象中的属性 收集当前他对应的effect函数\nconst targetMap = new WeakMap();\nexport function track(target, type, key) {\n  // 可以拿到当前的effect\n  //  activeEffect 当前正在运行的effect\n  if (activeEffect === undefined) {\n    // 此属性不用收集依赖，因为没在effect中使用\n    return;\n  }\n  let depsMap = targetMap.get(target);\n  if (!depsMap) {\n    targetMap.set(target, (depsMap = new Map()));\n  }\n  let dep = depsMap.get(key);\n  if (!dep) {\n    depsMap.set(key, (dep = new Set()));\n  }\n  if (!dep.has(activeEffect)) {\n    dep.add(activeEffect);\n  }\n}\n\n// 找属性对应的effect 让其执行 （数组、对象）\nexport function trigger(target, type, key?, newValue?, oldValue?) {\n  // 如果这个属性没有收集过effect，那不需要做任何操作\n  const depsMap = targetMap.get(target);\n  if (!depsMap) return; // 只是改了属性 这个属性没有在effect中使用\n\n  const effects = new Set(); // 这里对effect去重了\n  const add = (effectsToAdd) => {\n    // 如果同时有多个 依赖的effect是同一个 还用set做了一个过滤\n    if (effectsToAdd) {\n      effectsToAdd.forEach((effect) => effects.add(effect));\n    }\n  };\n  // 我要将所有的 要执行的effect 全部存到一个新的集合中，最终一起执行\n\n  // 1. 看修改的是不是数组的长度 因为改长度影响比较大 小于依赖收集的长度 要触发重新渲染\n  // 2. 如果调用了push方法 或者其他新增数组的方法(必须能改变长度的方法) 也要触发更新\n  if (key === 'length' && isArray(target)) {\n    // 如果对应的长度 有依赖收集需要更新\n    depsMap.forEach((dep, key) => {\n      if (key === 'length' || key > newValue) {\n        // 如果更改的长度 小于收集的索引，那么这个索引也需要触发effect重新执行\n        add(dep);\n      }\n    });\n  } else {\n    // 可能是对象\n    if (key !== undefined) {\n      // 这里肯定是修改， 不能是新增\n      add(depsMap.get(key)); // 如果是新增\n    }\n    // 如果修改数组中的 某一个索引 怎么办？\n    switch (\n      type // 如果添加了一个索引就触发长度的更新\n    ) {\n      case TriggerOrTypes.ADD:\n        if (isArray(target) && isIntegerKey(key)) {\n          add(depsMap.get('length'));\n        }\n    }\n  }\n  effects.forEach((effect: any) => {\n    if (effect.options.scheduler) {\n      effect.options.scheduler(effect); // 如果有自己提供的scheduler 则执行scheduler逻辑\n    } else {\n      effect();\n    }\n  });\n}\n// weakMap {name:'pf',age:12}  (map) =>{name => set(effect),age => set(effect)}\n// {name:'pf',age:12} => name => [effect effect]\n\n// 函数调用是一个栈型结构\n// effect(()=>{ // effect1   [effect1]\n//     state.name -> effect1\n//     effect(()=>{ // effect2\n//         state.age -> effect2\n//     })\n//     state.address -> effect1\n// })\n\n// 一个属性对应多个effect 一个effect还可以对应多个属性\n//  target key = [effect,effect]\n","// 实现 new Proxy(target, handler)\n\nimport {\n  extend,\n  hasChanged,\n  hasOwn,\n  isArray,\n  isIntegerKey,\n  isObject,\n} from '@vue/shared/src';\nimport { track, trigger } from './effect';\nimport { TrackOpTypes, TriggerOrTypes } from './operators';\nimport { reactive, readonly } from './reactive';\n\nconst get = createGetter();\nconst shallowGet = createGetter(false, true);\nconst readonlyGet = createGetter(true);\nconst showllowReadonlyGet = createGetter(true, true);\nconst set = createSetter();\nconst shallowSet = createSetter(true);\nexport const mutableHandlers = {\n  get,\n  set,\n};\nexport const shallowReactiveHandlers = {\n  get: shallowGet,\n  set: shallowSet,\n};\n\nlet readonlyObj = {\n  set: (target, key) => {\n    console.warn(`set on key ${key} falied`);\n  },\n};\nexport const readonlyHandlers = extend(\n  {\n    get: readonlyGet,\n  },\n  readonlyObj\n);\nexport const shallowReadonlyHandlers = extend(\n  {\n    get: showllowReadonlyGet,\n  },\n  readonlyObj\n);\n\n// 是不是仅读的，仅读的属性set时会报异常\n// 是不是深度的\nfunction createGetter(isReadonly = false, shallow = false) {\n  // 拦截获取功能\n  return function get(target, key, receiver) {\n    // let proxy = reactive({obj:{}})\n    // proxy + reflect\n    // 后续Object上的方法 会被迁移到Reflect Reflect.getProptypeof()\n    // 以前target[key] = value 方式设置值可能会失败 ， 并不会报异常 ，也没有返回值标识\n    // Reflect 方法具备返回值\n    // reflect 使用可以不使用 proxy es6语法\n\n    const res = Reflect.get(target, key, receiver); // target[key];\n    if (!isReadonly) {\n      // 收集依赖，等会数据变化后更新对应的视图\n      console.log('执行effect时会取值', '收集effect');\n\n      track(target, TrackOpTypes.GET, key);\n    }\n    if (shallow) {\n      return res;\n    }\n    if (isObject(res)) {\n      // vue2 是一上来就递归，vue3 是当取值时会进行代理 。 vue3的代理模式是懒代理\n      return isReadonly ? readonly(res) : reactive(res);\n    }\n    return res;\n  };\n}\nfunction createSetter(shallow = false) {\n  // 拦截设置功能\n  // 针对数组而言 如果调用push方法 就会触发两次 1.给数组新增了一项 2.因为更改了长度再次触发set(第二次触发是无意义的)\n  return function set(target, key, value, receiver) {\n    const oldValue = target[key]; // 获取老的值\n\n    // 数组且索引\n    let hadKey =\n      isArray(target) && isIntegerKey(key)\n        ? Number(key) < target.length\n        : hasOwn(target, key);\n\n    const result = Reflect.set(target, key, value, receiver); // target[key] = value\n\n    if (!hadKey) {\n      // 新增\n      trigger(target, TriggerOrTypes.ADD, key, value);\n    } else if (hasChanged(oldValue, value)) {\n      // 修改\n      trigger(target, TriggerOrTypes.SET, key, value, oldValue);\n    }\n\n    // 我们要区分是新增的 还是修改的  vue2 里无法监控更改索引，无法监控数组的长度变化  -》 hack的方法 需要特殊处理\n\n    // 当数据更新时 通知对应属性的effect重新执行\n\n    return result;\n  };\n}\n\n// Vue3针对的是对象来进行劫持 不用改写原来的对象 如果是嵌套 当取值的时候才会代理\n// Vue2 针对的是属性劫持 改写了原来对象 一上来就递归\n// Vue3 可以针对不存在的属性进行获取 也会走get方法 proxy支持数组\n","import { isObject } from '@vue/shared';\nimport {\n  mutableHandlers,\n  shallowReactiveHandlers,\n  readonlyHandlers,\n  shallowReadonlyHandlers,\n} from './baseHandlers';\nexport function reactive(target) {\n  return createReactiveObject(target, false, mutableHandlers);\n}\nexport function shallowReactive(target) {\n  return createReactiveObject(target, false, shallowReactiveHandlers);\n}\n\nexport function readonly(target) {\n  return createReactiveObject(target, true, readonlyHandlers);\n}\n\nexport function shallowReadonly(target) {\n  return createReactiveObject(target, true, shallowReadonlyHandlers);\n}\n\n// 是不是仅读 是不是深度， 柯里化  new Proxy() 最核心的需要拦截 数据的读取和数据的修改  get set\nconst reactiveMap = new WeakMap(); // 目的是添加缓存 会自动垃圾回收，不会造成内存泄漏， 存储的key只能是对象\nconst readonlyMap = new WeakMap();\nexport function createReactiveObject(target, isReadonly, baseHandlers) {\n  // 如果目标不是对象 没法拦截了，reactive这个api只能拦截对象类型\n  if (!isObject(target)) {\n    return target;\n  }\n  // 如果某个对象已经被代理过了 就不要再次代理了  可能一个对象 被代理是深度 又被仅读代理了\n  const proxyMap = isReadonly ? readonlyMap : reactiveMap;\n  const existProxy = proxyMap.get(target);\n  if (existProxy) {\n    return existProxy; // 如果已经被代理了 直接返回即可\n  }\n  const proxy = new Proxy(target, baseHandlers);\n  proxyMap.set(target, proxy); // 将要代理的对象 和对应代理结果缓存起来\n\n  return proxy;\n}\n","// createVNode  创建虚拟节点\n\nimport { isArray, isObject, isString, ShapeFlags } from '@vue/shared/src';\n\nexport function isVnode(vnode) {\n  return vnode.__v_isVnode;\n}\n// h(‘div',{style:{color:red}},'children'); //  h方法和createApp类似\nexport const createVnode = (type, props, children = null) => {\n  // 可以根据type 来区分是组件 还是普通的元素\n\n  // 根据type来区分 是元素还是组件\n\n  // 给虚拟节点加一个类型\n  const shapeFlag = isString(type)\n    ? ShapeFlags.ELEMENT\n    : isObject(type)\n    ? ShapeFlags.STATEFUL_COMPONENT\n    : 0;\n\n  const vnode = {\n    // 一个对象来描述对应的内容 ， 虚拟节点有跨平台的能力\n    __v_isVnode: true, // 他是一个vnode节点\n    type,\n    props,\n    children,\n    component: null, // 存放组件对应的实例\n    el: null, // 稍后会将虚拟节点和真实节点对应起来\n    key: props && props.key, // diff算法会用到key\n    shapeFlag, // 判断出当前自己的类型 和 儿子的类型\n  };\n  normalizeChildren(vnode, children);\n  return vnode;\n};\n\nfunction normalizeChildren(vnode, children) {\n  let type = 0;\n  if (children == null) {\n    // 不对儿子进行处理\n  } else if (isArray(children)) {\n    type = ShapeFlags.ARRAY_CHILDREN;\n  } else {\n    type = ShapeFlags.TEXT_CHILDREN;\n  }\n  vnode.shapeFlag |= type;\n}\nexport const Text = Symbol('Text');\nexport function normalizeVNode(child) {\n  if (isObject(child)) return child;\n\n  return createVnode(Text, null, String(child));\n}\n","import { createVnode } from './vnode';\n\nexport function createAppAPI(render) {\n  return function createApp(rootComponent, rootProps) {\n    // 告诉他那个组件那个属性来创建的应用\n    const app = {\n      _props: rootProps,\n      _component: rootComponent,\n      _container: null,\n      mount(container) {\n        // 挂载的目的地\n        // let vnode = {}\n        // render(vnode,container);\n\n        // 1.根据组件创建虚拟节点\n        // 2.将虚拟节点和容器获取到后调用render方法进行渲染\n\n        // 创造虚拟节点\n        const vnode = createVnode(rootComponent, rootProps);\n\n        // 调用render\n        render(vnode, container);\n\n        app._container = container;\n      },\n    };\n    return app;\n  };\n}\n","import { hasOwn } from '@vue/shared/src';\n\nexport const PublicInstanceProxyHandlers = {\n  get({ _: instance }, key) {\n    // 取值时 要访问 setUpState， props ,data\n    const { setupState, props, data } = instance;\n    if (key[0] == '$') {\n      return; // 不能访问$ 开头的变量\n    }\n    if (hasOwn(setupState, key)) {\n      return setupState[key];\n    } else if (hasOwn(props, key)) {\n      return props[key];\n    } else if (hasOwn(data, key)) {\n      return data[key];\n    }\n  },\n  set({ _: instance }, key, value) {\n    const { setupState, props, data } = instance;\n    if (hasOwn(setupState, key)) {\n      setupState[key] = value;\n    } else if (hasOwn(props, key)) {\n      props[key] = value;\n    } else if (hasOwn(data, key)) {\n      data[key] = value;\n    }\n    return true;\n  },\n};\n","// 组件中所有的方法\n\nimport { isFunction, isObject, ShapeFlags } from '@vue/shared/src';\nimport { PublicInstanceProxyHandlers } from './componentPublicInstance';\n\nexport function createComponentInstance(vnode) {\n  // webcomponent 组件需要有“属性” “插槽”\n  const instance = {\n    // 组件的实例\n    vnode,\n    type: vnode.type, // 用户写的对象\n    props: {}, // props attrs 有什么区别 vnode.props\n    attrs: {},\n    slots: {},\n    ctx: {},\n    data: {},\n    setupState: {}, // 如果setup返回一个对象，这个对象会作为setUpstate\n    render: null,\n    subTree: null, // render函数的返回结果就是subTree\n    isMounted: false, // 表示这个组件是否挂载过\n  };\n  instance.ctx = { _: instance }; // instance.ctx._\n  return instance;\n}\n\nexport function setupComponent(instance) {\n  const { props, children } = instance.vnode; // {type,props,children}\n\n  // 根据props 解析出 props 和 attrs，将其放到instance上\n  instance.props = props; // initProps()\n  instance.children = children; // 插槽的解析 initSlot()\n\n  // 需要先看下 当前组件是不是有状态的组件， 函数组件\n\n  let isStateful = instance.vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT;\n  if (isStateful) {\n    // 表示现在是一个带状态的组件\n    // 调用 当前实例的setup方法，用setup的返回值 填充 setupState和对应的render方法\n    setupStatefulComponent(instance);\n  }\n}\nfunction setupStatefulComponent(instance) {\n  // 1.代理 传递给render函数的参数\n  instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandlers as any);\n  // 2.获取组件的类型 拿到组件的setup方法\n  let Component = instance.type;\n  let { setup } = Component;\n  // ------ 没有setup------\n  if (setup) {\n    let setupContext = createSetupContext(instance);\n    const setupResult = setup(instance.props, setupContext); // instance 中props attrs slots emit expose 会被提取出来，因为在开发过程中会使用这些属性\n\n    handleSetupResult(instance, setupResult);\n  } else {\n    finishComponentSetup(instance); // 完成组件的启动\n  }\n}\nfunction handleSetupResult(instance, setupResult) {\n  if (isFunction(setupResult)) {\n    instance.render = setupResult;\n  } else if (isObject(setupResult)) {\n    instance.setupState = setupResult;\n  }\n  finishComponentSetup(instance);\n}\nfunction finishComponentSetup(instance) {\n  let Component = instance.type;\n  if (!instance.render) {\n    // 对template模板进行编译 产生render函数\n    // instance.render = render;// 需要将生成render函数放在实例上\n    if (!Component.render && Component.template) {\n      // 编译 将结果 赋予给Component.render\n    }\n    instance.render = Component.render;\n  }\n\n  // 对vue2.0API做了兼容处理\n  // applyOptions\n}\nfunction createSetupContext(instance) {\n  return {\n    attrs: instance.attrs,\n    slots: instance.slots,\n    emit: () => {},\n    expose: () => {},\n  };\n}\n// 他们的关系涉及到后面的使用\n// instance 表示的组件的状态 各种各样的状态，组件的相关信息\n// context 就4个参数 是为了开发时使用的\n// proxy 主要为了取值方便  =》 proxy.xxxx\n","let queue = [];\nexport function queueJob(job) {\n  if (!queue.includes(job)) {\n    queue.push(job);\n    queueFlush();\n  }\n}\nlet isFlushPending = false;\nfunction queueFlush() {\n  if (!isFlushPending) {\n    isFlushPending = true;\n    Promise.resolve().then(flushJobs);\n  }\n}\n\nfunction flushJobs() {\n  isFlushPending = false;\n  // 清空时  我们需要根据调用的顺序依次刷新  , 保证先刷新父在刷新子\n  queue.sort((a, b) => a.id - b.id);\n  for (let i = 0; i < queue.length; i++) {\n    const job = queue[i];\n    job();\n  }\n  queue.length = 0;\n}\n","import { effect } from '@vue/reactivity/src';\nimport { ShapeFlags } from '@vue/shared/src';\nimport { createAppAPI } from './apiCreateApp';\nimport { createComponentInstance, setupComponent } from './component';\nimport { queueJob } from './scheduler';\nimport { normalizeVNode, Text } from './vnode';\n\nexport function createRenderer(rendererOptions) {\n  // 告诉core 怎么渲染\n\n  const {\n    insert: hostInsert,\n    remove: hostRemove,\n    patchProp: hostPatchProp,\n    createElement: hostCreateElement,\n    createText: hostCreateText,\n    createComment: hostCreateComment,\n    setText: hostSetText,\n    setElementText: hostSetElementText,\n  } = rendererOptions;\n\n  // -------------------组件----------------------\n  const setupRenderEfect = (instance, container) => {\n    // 需要创建一个effect 在effect中调用 render方法，这样render方法中拿到的数据会收集这个effect，属性更新时effect会重新执行\n\n    instance.update = effect(\n      function componentEffect() {\n        // 每个组件都有一个effect， vue3 是组件级更新，数据变化会重新执行对应组件的effect\n        if (!instance.isMounted) {\n          // 初次渲染\n          let proxyToUse = instance.proxy;\n          // $vnode  _vnode\n          // vnode  subTree\n          let subTree = (instance.subTree = instance.render.call(\n            proxyToUse,\n            proxyToUse\n          ));\n\n          // 用render函数的返回值 继续渲染\n          patch(null, subTree, container);\n          instance.isMounted = true;\n        } else {\n          // diff算法  （核心 diff + 序列优化 watchApi 生命周期）\n          // ts 一周\n          // 组件库\n          // 更新逻辑\n        }\n      },\n      {\n        scheduler: queueJob,\n      }\n    );\n  };\n  const mountComponent = (initialVNode, container) => {\n    // 组件的渲染流程  最核心的就是调用 setup拿到返回值，获取render函数返回的结果来进行渲染\n    // 1.先有实例\n    const instance = (initialVNode.component =\n      createComponentInstance(initialVNode));\n    // 2.需要的数据解析到实例上\n    setupComponent(instance); // state props attrs render ....\n    // 3.创建一个effect 让render函数执行\n    setupRenderEfect(instance, container);\n  };\n  const processComponent = (n1, n2, container) => {\n    if (n1 == null) {\n      // 组件没有上一次的虚拟节点\n      mountComponent(n2, container);\n    } else {\n      // 组件更新流程\n    }\n  };\n  // ------------------组件 ------------------\n\n  //----------------- 处理元素-----------------\n  const mountChildren = (children, container) => {\n    for (let i = 0; i < children.length; i++) {\n      let child = normalizeVNode(children[i]);\n      patch(null, child, container);\n    }\n  };\n  const mountElement = (vnode, container) => {\n    // 递归渲染\n    const { props, shapeFlag, type, children } = vnode;\n    let el = (vnode.el = hostCreateElement(type));\n\n    if (props) {\n      for (const key in props) {\n        hostPatchProp(el, key, null, props[key]);\n      }\n    }\n    if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\n      hostSetElementText(el, children); // 文本比较简单 直接扔进去即可\n    } else if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n      mountChildren(children, el);\n    }\n    hostInsert(el, container);\n  };\n  const processElement = (n1, n2, container) => {\n    if (n1 == null) {\n      mountElement(n2, container);\n    } else {\n      // 元素更新\n    }\n  };\n  //----------------- 处理元素-----------------\n\n  // -----------------文本处理-----------------\n  const processText = (n1, n2, container) => {\n    if (n1 == null) {\n      hostInsert((n2.el = hostCreateText(n2.children)), container);\n    }\n  };\n  // -----------------文本处理-----------------\n  const patch = (n1, n2, container) => {\n    // 针对不同类型 做初始化操作\n    const { shapeFlag, type } = n2;\n    switch (type) {\n      case Text:\n        processText(n1, n2, container);\n        break;\n      default:\n        if (shapeFlag & ShapeFlags.ELEMENT) {\n          processElement(n1, n2, container);\n        } else if (shapeFlag & ShapeFlags.STATEFUL_COMPONENT) {\n          processComponent(n1, n2, container);\n        }\n    }\n  };\n  const render = (vnode, container) => {\n    // core的核心, 根据不同的虚拟节点 创建对应的真实元素\n\n    // 默认调用render 可能是初始化流程\n    patch(null, vnode, container);\n  };\n  return {\n    createApp: createAppAPI(render),\n  };\n}\n// createRenderer 目的是创建一个渲染器\n\n// 框架 都是将组件 转化成虚拟DOM -》 虚拟DOM生成真实DOM挂载到真实页面上\n","import { isArray, isObject } from '@vue/shared';\nimport { createVnode, isVnode } from './vnode';\n\nexport function h(type, propsOrChildren, children) {\n  // 第一个一定是类型 第一个采纳数可能是属性可能是儿子 后面的一定都是儿子 没有属性的情况只能放数组\n  // 一个的情况可以写文本 一个type + 一个文本\n  const l = arguments.length;\n  if (l === 2) {\n    // 如果propsOrChildren是数组 直接作为第三个参数\n    if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\n      if (isVnode(propsOrChildren)) {\n        return createVnode(type, null, [propsOrChildren]);\n      }\n      return createVnode(type, propsOrChildren);\n    } else {\n      // 如果第二个参数 不是对象 那一定是孩子\n      return createVnode(type, null, propsOrChildren);\n    }\n  } else {\n    if (l > 3) {\n      children = Array.from(arguments).slice(2);\n    } else if (l === 3 && isVnode(children)) {\n      children = [children];\n    }\n    return createVnode(type, propsOrChildren, children);\n  }\n}\n"],"names":[],"mappings":"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"}