{"version":3,"file":"reactivity.global.js","sources":["../../shared/src/index.ts","../src/effect.ts","../src/baseHandlers.ts","../src/reactive.ts","../src/ref.ts","../src/computed.ts"],"sourcesContent":["export const isObject = (value) => typeof value == 'object' && value !== null;\nexport const extend = Object.assign;\nexport const isArray = Array.isArray;\nexport const isFunction = (value) => typeof value == 'function';\nexport const isNumber = (value) => typeof value == 'number';\nexport const isString = (value) => typeof value === 'string';\nexport const isIntegerKey = (key) => parseInt(key) + '' === key;\n\nlet hasOwnpRroperty = Object.prototype.hasOwnProperty;\nexport const hasOwn = (target, key) => hasOwnpRroperty.call(target, key);\n\nexport const hasChanged = (oldValue, value) => oldValue !== value;\n\nexport * from './shapeFlag';\n","import { isArray, isIntegerKey } from '@vue/shared/src';\nimport { TriggerOrTypes } from './operators';\n\nexport function effect(fn, options: any = {}) {\n  // 我需要让这个effect变成响应的effect，可以做到数据变化重新执行\n  const effect = createReactiveEffect(fn, options);\n  if (!options.lazy) {\n    // 默认的effect会先执行\n    effect(); // 响应式的effect默认会先执行一次\n  }\n  return effect;\n}\nlet uid = 0;\nlet activeEffect; // 存储当前的effect\nconst effectStack = [];\nfunction createReactiveEffect(fn, options) {\n  const effect = function reactiveEffect() {\n    if (!effectStack.includes(effect)) {\n      // 保证effect没有加入到effectStack中\n      try {\n        effectStack.push(effect);\n        activeEffect = effect;\n        return fn(); // 函数执行时会取值  会执行get方法\n      } finally {\n        effectStack.pop();\n        activeEffect = effectStack[effectStack.length - 1];\n      }\n    }\n  };\n  effect.id = uid++; // 制作一个effect标识 用于区分effect\n  effect._isEffect = true; // 用于标识这个是响应式effect\n  effect.raw = fn; // 保留effect对应的原函数\n  effect.options = options; // 在effect上保存用户的属性\n  return effect;\n}\n// 让某个对象中的属性 收集当前他对应的effect函数\nconst targetMap = new WeakMap();\nexport function track(target, type, key) {\n  // 可以拿到当前的effect\n  //  activeEffect 当前正在运行的effect\n  if (activeEffect === undefined) {\n    // 此属性不用收集依赖，因为没在effect中使用\n    return;\n  }\n  let depsMap = targetMap.get(target);\n  if (!depsMap) {\n    targetMap.set(target, (depsMap = new Map()));\n  }\n  let dep = depsMap.get(key);\n  if (!dep) {\n    depsMap.set(key, (dep = new Set()));\n  }\n  if (!dep.has(activeEffect)) {\n    dep.add(activeEffect);\n  }\n}\n\n// 找属性对应的effect 让其执行 （数组、对象）\nexport function trigger(target, type, key?, newValue?, oldValue?) {\n  // 如果这个属性没有收集过effect，那不需要做任何操作\n  const depsMap = targetMap.get(target);\n  if (!depsMap) return; // 只是改了属性 这个属性没有在effect中使用\n\n  const effects = new Set(); // 这里对effect去重了\n  const add = (effectsToAdd) => {\n    // 如果同时有多个 依赖的effect是同一个 还用set做了一个过滤\n    if (effectsToAdd) {\n      effectsToAdd.forEach((effect) => effects.add(effect));\n    }\n  };\n  // 我要将所有的 要执行的effect 全部存到一个新的集合中，最终一起执行\n\n  // 1. 看修改的是不是数组的长度 因为改长度影响比较大 小于依赖收集的长度 要触发重新渲染\n  // 2. 如果调用了push方法 或者其他新增数组的方法(必须能改变长度的方法) 也要触发更新\n  if (key === 'length' && isArray(target)) {\n    // 如果对应的长度 有依赖收集需要更新\n    depsMap.forEach((dep, key) => {\n      if (key === 'length' || key > newValue) {\n        // 如果更改的长度 小于收集的索引，那么这个索引也需要触发effect重新执行\n        add(dep);\n      }\n    });\n  } else {\n    // 可能是对象\n    if (key !== undefined) {\n      // 这里肯定是修改， 不能是新增\n      add(depsMap.get(key)); // 如果是新增\n    }\n    // 如果修改数组中的 某一个索引 怎么办？\n    switch (\n      type // 如果添加了一个索引就触发长度的更新\n    ) {\n      case TriggerOrTypes.ADD:\n        if (isArray(target) && isIntegerKey(key)) {\n          add(depsMap.get('length'));\n        }\n    }\n  }\n  effects.forEach((effect: any) => {\n    if (effect.options.scheduler) {\n      effect.options.scheduler(effect); // 如果有自己提供的scheduler 则执行scheduler逻辑\n    } else {\n      effect();\n    }\n  });\n}\n// weakMap {name:'pf',age:12}  (map) =>{name => set(effect),age => set(effect)}\n// {name:'pf',age:12} => name => [effect effect]\n\n// 函数调用是一个栈型结构\n// effect(()=>{ // effect1   [effect1]\n//     state.name -> effect1\n//     effect(()=>{ // effect2\n//         state.age -> effect2\n//     })\n//     state.address -> effect1\n// })\n\n// 一个属性对应多个effect 一个effect还可以对应多个属性\n//  target key = [effect,effect]\n","// 实现 new Proxy(target, handler)\n\nimport {\n  extend,\n  hasChanged,\n  hasOwn,\n  isArray,\n  isIntegerKey,\n  isObject,\n} from '@vue/shared/src';\nimport { track, trigger } from './effect';\nimport { TrackOpTypes, TriggerOrTypes } from './operators';\nimport { reactive, readonly } from './reactive';\n\nconst get = createGetter();\nconst shallowGet = createGetter(false, true);\nconst readonlyGet = createGetter(true);\nconst showllowReadonlyGet = createGetter(true, true);\nconst set = createSetter();\nconst shallowSet = createSetter(true);\nexport const mutableHandlers = {\n  get,\n  set,\n};\nexport const shallowReactiveHandlers = {\n  get: shallowGet,\n  set: shallowSet,\n};\n\nlet readonlyObj = {\n  set: (target, key) => {\n    console.warn(`set on key ${key} falied`);\n  },\n};\nexport const readonlyHandlers = extend(\n  {\n    get: readonlyGet,\n  },\n  readonlyObj\n);\nexport const shallowReadonlyHandlers = extend(\n  {\n    get: showllowReadonlyGet,\n  },\n  readonlyObj\n);\n\n// 是不是仅读的，仅读的属性set时会报异常\n// 是不是深度的\nfunction createGetter(isReadonly = false, shallow = false) {\n  // 拦截获取功能\n  return function get(target, key, receiver) {\n    // let proxy = reactive({obj:{}})\n    // proxy + reflect\n    // 后续Object上的方法 会被迁移到Reflect Reflect.getProptypeof()\n    // 以前target[key] = value 方式设置值可能会失败 ， 并不会报异常 ，也没有返回值标识\n    // Reflect 方法具备返回值\n    // reflect 使用可以不使用 proxy es6语法\n\n    const res = Reflect.get(target, key, receiver); // target[key];\n    if (!isReadonly) {\n      // 收集依赖，等会数据变化后更新对应的视图\n      console.log('执行effect时会取值', '收集effect');\n\n      track(target, TrackOpTypes.GET, key);\n    }\n    if (shallow) {\n      return res;\n    }\n    if (isObject(res)) {\n      // vue2 是一上来就递归，vue3 是当取值时会进行代理 。 vue3的代理模式是懒代理\n      return isReadonly ? readonly(res) : reactive(res);\n    }\n    return res;\n  };\n}\nfunction createSetter(shallow = false) {\n  // 拦截设置功能\n  // 针对数组而言 如果调用push方法 就会触发两次 1.给数组新增了一项 2.因为更改了长度再次触发set(第二次触发是无意义的)\n  return function set(target, key, value, receiver) {\n    const oldValue = target[key]; // 获取老的值\n\n    // 数组且索引\n    let hadKey =\n      isArray(target) && isIntegerKey(key)\n        ? Number(key) < target.length\n        : hasOwn(target, key);\n\n    const result = Reflect.set(target, key, value, receiver); // target[key] = value\n\n    if (!hadKey) {\n      // 新增\n      trigger(target, TriggerOrTypes.ADD, key, value);\n    } else if (hasChanged(oldValue, value)) {\n      // 修改\n      trigger(target, TriggerOrTypes.SET, key, value, oldValue);\n    }\n\n    // 我们要区分是新增的 还是修改的  vue2 里无法监控更改索引，无法监控数组的长度变化  -》 hack的方法 需要特殊处理\n\n    // 当数据更新时 通知对应属性的effect重新执行\n\n    return result;\n  };\n}\n\n// Vue3针对的是对象来进行劫持 不用改写原来的对象 如果是嵌套 当取值的时候才会代理\n// Vue2 针对的是属性劫持 改写了原来对象 一上来就递归\n// Vue3 可以针对不存在的属性进行获取 也会走get方法 proxy支持数组\n","import { isObject } from '@vue/shared';\nimport {\n  mutableHandlers,\n  shallowReactiveHandlers,\n  readonlyHandlers,\n  shallowReadonlyHandlers,\n} from './baseHandlers';\nexport function reactive(target) {\n  return createReactiveObject(target, false, mutableHandlers);\n}\nexport function shallowReactive(target) {\n  return createReactiveObject(target, false, shallowReactiveHandlers);\n}\n\nexport function readonly(target) {\n  return createReactiveObject(target, true, readonlyHandlers);\n}\n\nexport function shallowReadonly(target) {\n  return createReactiveObject(target, true, shallowReadonlyHandlers);\n}\n\n// 是不是仅读 是不是深度， 柯里化  new Proxy() 最核心的需要拦截 数据的读取和数据的修改  get set\nconst reactiveMap = new WeakMap(); // 目的是添加缓存 会自动垃圾回收，不会造成内存泄漏， 存储的key只能是对象\nconst readonlyMap = new WeakMap();\nexport function createReactiveObject(target, isReadonly, baseHandlers) {\n  // 如果目标不是对象 没法拦截了，reactive这个api只能拦截对象类型\n  if (!isObject(target)) {\n    return target;\n  }\n  // 如果某个对象已经被代理过了 就不要再次代理了  可能一个对象 被代理是深度 又被仅读代理了\n  const proxyMap = isReadonly ? readonlyMap : reactiveMap;\n  const existProxy = proxyMap.get(target);\n  if (existProxy) {\n    return existProxy; // 如果已经被代理了 直接返回即可\n  }\n  const proxy = new Proxy(target, baseHandlers);\n  proxyMap.set(target, proxy); // 将要代理的对象 和对应代理结果缓存起来\n\n  return proxy;\n}\n","import { hasChanged, isArray, isObject } from '@vue/shared/src';\nimport { track, trigger } from './effect';\nimport { TrackOpTypes, TriggerOrTypes } from './operators';\nimport { reactive } from './reactive';\n\nexport function ref(value) {\n  // 将普通类型 变成一个对象 , 可以是对象 但是一般情况下是对象直接用reactive更合理\n  return createRef(value);\n}\n\n// ref 和 reactive的区别 reactive内部采用proxy  ref中内部使用的是defineProperty\nexport function shallowRef(value) {\n  return createRef(value, true);\n}\n\n// 后续 看vue的源码 基本上都是高阶函数 做了类似柯里化的功能\nconst convert = (val) => (isObject(val) ? reactive(val) : val);\n// beta 版本 之前的版本ref 就是个对象 ，由于对象不方便扩展 改成了类 (ts中实现类的话 私有属性必须要先声明才能使用)\nclass RefImpl {\n  public _value; //表示 声明了一个_value属性 但是没有赋值\n  public __v_isRef = true; // 产生的实例会被添加 __v_isRef 表示是一个ref属性\n  constructor(public rawValue, public shallow) {\n    // 参数中前面增加修饰符 标识此属性放到了实例上\n    this._value = shallow ? rawValue : convert(rawValue); // 如果是深度 需要把里面的都变成响应式的\n  }\n  // 类的属性访问器\n  get value() {\n    // 代理 取值取value 会帮我们代理到 _value上\n    track(this, TrackOpTypes.GET, 'value');\n    return this._value;\n  }\n  set value(newValue) {\n    if (hasChanged(newValue, this.rawValue)) {\n      // 判断老值和新值是否有变化\n      this.rawValue = newValue; // 新值会作为老值 用于下次比对\n      this._value = this.shallow ? newValue : convert(newValue);\n      trigger(this, TriggerOrTypes.SET, 'value', newValue);\n    }\n  }\n}\nfunction createRef(rawValue, shallow = false) {\n  return new RefImpl(rawValue, shallow); // 借助类的属性访问器\n}\n\nclass ObjectRefImpl {\n  public __v_isRef = true;\n  constructor(public target, public key) {}\n  get value() {\n    // 代理\n    return this.target[this.key]; // 如果原对象是响应式的就会依赖收集\n  }\n  set value(newValue) {\n    this.target[this.key] = newValue; // 如果原来对象是响应式的 那么就会触发更新\n  }\n}\n// promisify\n// promisifyAll\n\n// 将某一个key对应的值 转化成ref\nexport function toRef(target, key) {\n  // 可以把一个对象的值转化成 ref类型\n  return new ObjectRefImpl(target, key);\n}\n\nexport function toRefs(object) {\n  // object 可能传递的是一个数组 或者对象\n  const ret = isArray(object) ? new Array(object.length) : {};\n  for (let key in object) {\n    ret[key] = toRef(object, key);\n  }\n  return ret;\n}\n\n// ref其他方法实现 计算属性\n// effect和reactive和ref的关系\n// computed源码调试\n// vue3的渲染原理 diff算法\n","import { isFunction } from '@vue/shared';\nimport { effect, track, trigger } from './effect';\nimport { TrackOpTypes, TriggerOrTypes } from './operators';\n\nclass ComputedRefImpl {\n  public _dirty = true; // 默认取值时不要用缓存\n  public _value;\n  public effect;\n  constructor(public getter, public setter) {\n    // 返还了effect的执行权限\n    this.effect = effect(getter, {\n      lazy: true, // 默认不执行\n      scheduler: () => {\n        // 传入了scheduler后 下次数据更新 原则上应该让effect重新执行 下次更新会调用scheduler\n        if (!this._dirty) {\n          // 依赖属性变化时\n          this._dirty = true; // 标记为脏 触发视图更新\n          trigger(this, TriggerOrTypes.SET, 'value');\n        }\n      },\n    });\n  }\n  // 如果用户不去计算属性中取值 就不会执行计算属性的effect\n  get value() {\n    // 计算属性也要收集依赖\n    if (this._dirty) {\n      this._value = this.effect(); // 会将用户的返回值返回\n      this._dirty = false;\n    }\n    track(this, TrackOpTypes.GET, 'value'); // 进行属性依赖收集\n    return this._value;\n  }\n  set value(newValue) {\n    // 当用户给计算属性设置值的时候会触发set方法 此时调用计算属性的setter\n    this.setter(newValue);\n  }\n}\n\nexport function computed(getterOrOptoins) {\n  let getter;\n  let setter;\n  if (isFunction(getterOrOptoins)) {\n    // computed两种写法\n    getter = getterOrOptoins;\n    setter = () => {\n      console.warn('computed value must be readonly');\n    };\n  } else {\n    getter = getterOrOptoins.get;\n    setter = getterOrOptoins.set;\n  }\n  return new ComputedRefImpl(getter, setter);\n}\n"],"names":[],"mappings":";;;EAAO,MAAM,QAAQ,GAAG,CAAC,KAAK,KAAK,OAAO,KAAK,IAAI,QAAQ,IAAI,KAAK,KAAK,IAAI,CAAC;EACvE,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;EAC7B,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;EAC9B,MAAM,UAAU,GAAG,CAAC,KAAK,KAAK,OAAO,KAAK,IAAI,UAAU,CAAC;EAGzD,MAAM,YAAY,GAAG,CAAC,GAAG,KAAK,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,GAAG,CAAC;EAEhE,IAAI,eAAe,GAAG,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC;EAC/C,MAAM,MAAM,GAAG,CAAC,MAAM,EAAE,GAAG,KAAK,eAAe,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;EAElE,MAAM,UAAU,GAAG,CAAC,QAAQ,EAAE,KAAK,KAAK,QAAQ,KAAK,KAAK;;WCRjD,MAAM,CAAC,EAAE,EAAE,UAAe,EAAE,EAAA;;MAE1C,MAAM,MAAM,GAAG,oBAAoB,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;EACjD,IAAA,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;;UAEjB,MAAM,EAAE,CAAC;EACV,KAAA;EACD,IAAA,OAAO,MAAM,CAAC;EAChB,CAAC;EACD,IAAI,GAAG,GAAG,CAAC,CAAC;EACZ,IAAI,YAAY,CAAC;EACjB,MAAM,WAAW,GAAG,EAAE,CAAC;EACvB,SAAS,oBAAoB,CAAC,EAAE,EAAE,OAAO,EAAA;MACvC,MAAM,MAAM,GAAG,SAAS,cAAc,GAAA;EACpC,QAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;;cAEjC,IAAI;EACF,gBAAA,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;kBACzB,YAAY,GAAG,MAAM,CAAC;EACtB,gBAAA,OAAO,EAAE,EAAE,CAAC;EACb,aAAA;EAAS,oBAAA;kBACR,WAAW,CAAC,GAAG,EAAE,CAAC;kBAClB,YAAY,GAAG,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EACpD,aAAA;EACF,SAAA;EACH,KAAC,CAAC;EACF,IAAA,MAAM,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC;EAClB,IAAA,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;EACxB,IAAA,MAAM,CAAC,GAAG,GAAG,EAAE,CAAC;EAChB,IAAA,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;EACzB,IAAA,OAAO,MAAM,CAAC;EAChB,CAAC;EACD;EACA,MAAM,SAAS,GAAG,IAAI,OAAO,EAAE,CAAC;WAChB,KAAK,CAAC,MAAM,EAAE,IAAI,EAAE,GAAG,EAAA;;;MAGrC,IAAI,YAAY,KAAK,SAAS,EAAE;;UAE9B,OAAO;EACR,KAAA;MACD,IAAI,OAAO,GAAG,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;MACpC,IAAI,CAAC,OAAO,EAAE;EACZ,QAAA,SAAS,CAAC,GAAG,CAAC,MAAM,GAAG,OAAO,GAAG,IAAI,GAAG,EAAE,EAAE,CAAC;EAC9C,KAAA;MACD,IAAI,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;MAC3B,IAAI,CAAC,GAAG,EAAE;EACR,QAAA,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,EAAE,EAAE,CAAC;EACrC,KAAA;EACD,IAAA,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE;EAC1B,QAAA,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;EACvB,KAAA;EACH,CAAC;EAED;EACM,SAAU,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,GAAI,EAAE,QAAS,EAAE,QAAS,EAAA;;MAE9D,MAAM,OAAO,GAAG,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;EACtC,IAAA,IAAI,CAAC,OAAO;EAAE,QAAA,OAAO;EAErB,IAAA,MAAM,OAAO,GAAG,IAAI,GAAG,EAAE,CAAC;EAC1B,IAAA,MAAM,GAAG,GAAG,CAAC,YAAY,KAAI;;EAE3B,QAAA,IAAI,YAAY,EAAE;EAChB,YAAA,YAAY,CAAC,OAAO,CAAC,CAAC,MAAM,KAAK,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;EACvD,SAAA;EACH,KAAC,CAAC;;;;MAKF,IAAI,GAAG,KAAK,QAAQ,IAAI,OAAO,CAAC,MAAM,CAAC,EAAE;;UAEvC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,GAAG,KAAI;EAC3B,YAAA,IAAI,GAAG,KAAK,QAAQ,IAAI,GAAG,GAAG,QAAQ,EAAE;;kBAEtC,GAAG,CAAC,GAAG,CAAC,CAAC;EACV,aAAA;EACH,SAAC,CAAC,CAAC;EACJ,KAAA;EAAM,SAAA;;UAEL,IAAI,GAAG,KAAK,SAAS,EAAE;;cAErB,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;EACvB,SAAA;;UAED,QACE,IAAI;EACJ;EACA,YAAA,KAAA,CAAA;kBACE,IAAI,OAAO,CAAC,MAAM,CAAC,IAAI,YAAY,CAAC,GAAG,CAAC,EAAE;sBACxC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;EAC5B,iBAAA;EACJ,SAAA;EACF,KAAA;EACD,IAAA,OAAO,CAAC,OAAO,CAAC,CAAC,MAAW,KAAI;EAC9B,QAAA,IAAI,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE;cAC5B,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;EAClC,SAAA;EAAM,aAAA;EACL,YAAA,MAAM,EAAE,CAAC;EACV,SAAA;EACH,KAAC,CAAC,CAAC;EACL,CAAC;EACD;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;;ECvHA;EAcA,MAAM,GAAG,GAAG,YAAY,EAAE,CAAC;EAC3B,MAAM,UAAU,GAAG,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;EAC7C,MAAM,WAAW,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;EACvC,MAAM,mBAAmB,GAAG,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;EACrD,MAAM,GAAG,GAAG,YAAY,EAAE,CAAC;EAC3B,MAAM,UAAU,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;EAC/B,MAAM,eAAe,GAAG;MAC7B,GAAG;MACH,GAAG;GACJ,CAAC;EACK,MAAM,uBAAuB,GAAG;EACrC,IAAA,GAAG,EAAE,UAAU;EACf,IAAA,GAAG,EAAE,UAAU;GAChB,CAAC;EAEF,IAAI,WAAW,GAAG;EAChB,IAAA,GAAG,EAAE,CAAC,MAAM,EAAE,GAAG,KAAI;EACnB,QAAA,OAAO,CAAC,IAAI,CAAC,cAAc,GAAG,CAAA,OAAA,CAAS,CAAC,CAAC;OAC1C;GACF,CAAC;EACK,MAAM,gBAAgB,GAAG,MAAM,CACpC;EACE,IAAA,GAAG,EAAE,WAAW;GACjB,EACD,WAAW,CACZ,CAAC;EACK,MAAM,uBAAuB,GAAG,MAAM,CAC3C;EACE,IAAA,GAAG,EAAE,mBAAmB;GACzB,EACD,WAAW,CACZ,CAAC;EAEF;EACA;EACA,SAAS,YAAY,CAAC,UAAU,GAAG,KAAK,EAAE,OAAO,GAAG,KAAK,EAAA;;EAEvD,IAAA,OAAO,SAAS,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAA;;;;;;;EAQvC,QAAA,MAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC;UAC/C,IAAI,CAAC,UAAU,EAAE;;EAEf,YAAA,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC;EAExC,YAAA,KAAK,CAAC,MAAM,EAAoB,CAAA,yBAAA,GAAG,CAAC,CAAC;EACtC,SAAA;EACD,QAAA,IAAI,OAAO,EAAE;EACX,YAAA,OAAO,GAAG,CAAC;EACZ,SAAA;EACD,QAAA,IAAI,QAAQ,CAAC,GAAG,CAAC,EAAE;;EAEjB,YAAA,OAAO,UAAU,GAAG,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;EACnD,SAAA;EACD,QAAA,OAAO,GAAG,CAAC;EACb,KAAC,CAAC;EACJ,CAAC;EACD,SAAS,YAAY,CAAC,OAAO,GAAG,KAAK,EAAA;;;MAGnC,OAAO,SAAS,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,QAAQ,EAAA;UAC9C,MAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;;UAG7B,IAAI,MAAM,GACR,OAAO,CAAC,MAAM,CAAC,IAAI,YAAY,CAAC,GAAG,CAAC;gBAChC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM;EAC7B,cAAE,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;EAE1B,QAAA,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;UAEzD,IAAI,CAAC,MAAM,EAAE;;EAEX,YAAA,OAAO,CAAC,MAAM,EAAA,CAAA,2BAAsB,GAAG,EAAE,KAAK,CAAC,CAAC;EACjD,SAAA;EAAM,aAAA,IAAI,UAAU,CAAC,QAAQ,EAAE,KAAK,CAAC,EAAE;;cAEtC,OAAO,CAAC,MAAM,EAAsB,CAAA,2BAAA,GAAG,EAAE,KAAe,CAAC,CAAC;EAC3D,SAAA;;;EAMD,QAAA,OAAO,MAAM,CAAC;EAChB,KAAC,CAAC;EACJ,CAAC;EAED;EACA;EACA;;ECrGM,SAAU,QAAQ,CAAC,MAAM,EAAA;MAC7B,OAAO,oBAAoB,CAAC,MAAM,EAAE,KAAK,EAAE,eAAe,CAAC,CAAC;EAC9D,CAAC;EACK,SAAU,eAAe,CAAC,MAAM,EAAA;MACpC,OAAO,oBAAoB,CAAC,MAAM,EAAE,KAAK,EAAE,uBAAuB,CAAC,CAAC;EACtE,CAAC;EAEK,SAAU,QAAQ,CAAC,MAAM,EAAA;MAC7B,OAAO,oBAAoB,CAAC,MAAM,EAAE,IAAI,EAAE,gBAAgB,CAAC,CAAC;EAC9D,CAAC;EAEK,SAAU,eAAe,CAAC,MAAM,EAAA;MACpC,OAAO,oBAAoB,CAAC,MAAM,EAAE,IAAI,EAAE,uBAAuB,CAAC,CAAC;EACrE,CAAC;EAED;EACA,MAAM,WAAW,GAAG,IAAI,OAAO,EAAE,CAAC;EAClC,MAAM,WAAW,GAAG,IAAI,OAAO,EAAE,CAAC;WAClB,oBAAoB,CAAC,MAAM,EAAE,UAAU,EAAE,YAAY,EAAA;;EAEnE,IAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;EACrB,QAAA,OAAO,MAAM,CAAC;EACf,KAAA;;MAED,MAAM,QAAQ,GAAG,UAAU,GAAG,WAAW,GAAG,WAAW,CAAC;MACxD,MAAM,UAAU,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;EACxC,IAAA,IAAI,UAAU,EAAE;UACd,OAAO,UAAU,CAAC;EACnB,KAAA;MACD,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;MAC9C,QAAQ,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;EAE5B,IAAA,OAAO,KAAK,CAAC;EACf;;ECnCM,SAAU,GAAG,CAAC,KAAK,EAAA;;EAEvB,IAAA,OAAO,SAAS,CAAC,KAAK,CAAC,CAAC;EAC1B,CAAC;EAED;EACM,SAAU,UAAU,CAAC,KAAK,EAAA;EAC9B,IAAA,OAAO,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;EAChC,CAAC;EAED;EACA,MAAM,OAAO,GAAG,CAAC,GAAG,MAAM,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;EAC/D;EACA,MAAM,OAAO,CAAA;EAGQ,IAAA,QAAA,CAAA;EAAiB,IAAA,OAAA,CAAA;MAF7B,MAAM,CAAC;EACP,IAAA,SAAS,GAAG,IAAI,CAAC;MACxB,WAAmB,CAAA,QAAQ,EAAS,OAAO,EAAA;UAAxB,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAA;UAAS,IAAO,CAAA,OAAA,GAAP,OAAO,CAAA;;EAEzC,QAAA,IAAI,CAAC,MAAM,GAAG,OAAO,GAAG,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;OACtD;;EAED,IAAA,IAAI,KAAK,GAAA;;EAEP,QAAA,KAAK,CAAC,IAAI,EAAoB,CAAA,yBAAA,OAAO,CAAC,CAAC;UACvC,OAAO,IAAI,CAAC,MAAM,CAAC;OACpB;MACD,IAAI,KAAK,CAAC,QAAQ,EAAA;UAChB,IAAI,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE;;EAEvC,YAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;EACzB,YAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,GAAG,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;EAC1D,YAAA,OAAO,CAAC,IAAI,EAAA,CAAA,2BAAsB,OAAO,EAAE,QAAQ,CAAC,CAAC;EACtD,SAAA;OACF;EACF,CAAA;EACD,SAAS,SAAS,CAAC,QAAQ,EAAE,OAAO,GAAG,KAAK,EAAA;MAC1C,OAAO,IAAI,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;EACxC,CAAC;EAED,MAAM,aAAa,CAAA;EAEE,IAAA,MAAA,CAAA;EAAe,IAAA,GAAA,CAAA;MAD3B,SAAS,GAAG,IAAI,CAAC;MACxB,WAAmB,CAAA,MAAM,EAAS,GAAG,EAAA;UAAlB,IAAM,CAAA,MAAA,GAAN,MAAM,CAAA;UAAS,IAAG,CAAA,GAAA,GAAH,GAAG,CAAA;OAAI;EACzC,IAAA,IAAI,KAAK,GAAA;;UAEP,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;OAC9B;MACD,IAAI,KAAK,CAAC,QAAQ,EAAA;UAChB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;OAClC;EACF,CAAA;EACD;EACA;EAEA;EACgB,SAAA,KAAK,CAAC,MAAM,EAAE,GAAG,EAAA;;EAE/B,IAAA,OAAO,IAAI,aAAa,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;EACxC,CAAC;EAEK,SAAU,MAAM,CAAC,MAAM,EAAA;;MAE3B,MAAM,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;EAC5D,IAAA,KAAK,IAAI,GAAG,IAAI,MAAM,EAAE;UACtB,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;EAC/B,KAAA;EACD,IAAA,OAAO,GAAG,CAAC;EACb,CAAC;EAED;EACA;EACA;EACA;;ECxEA,MAAM,eAAe,CAAA;EAIA,IAAA,MAAA,CAAA;EAAe,IAAA,MAAA,CAAA;EAH3B,IAAA,MAAM,GAAG,IAAI,CAAC;EACd,IAAA,MAAM,CAAC;EACP,IAAA,MAAM,CAAC;MACd,WAAmB,CAAA,MAAM,EAAS,MAAM,EAAA;UAArB,IAAM,CAAA,MAAA,GAAN,MAAM,CAAA;UAAS,IAAM,CAAA,MAAA,GAAN,MAAM,CAAA;;EAEtC,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE;EAC3B,YAAA,IAAI,EAAE,IAAI;cACV,SAAS,EAAE,MAAK;;EAEd,gBAAA,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;;EAEhB,oBAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;EACnB,oBAAA,OAAO,CAAC,IAAI,EAAsB,CAAA,2BAAA,OAAO,CAAC,CAAC;EAC5C,iBAAA;eACF;EACF,SAAA,CAAC,CAAC;OACJ;;EAED,IAAA,IAAI,KAAK,GAAA;;UAEP,IAAI,IAAI,CAAC,MAAM,EAAE;cACf,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;EAC5B,YAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;EACrB,SAAA;EACD,QAAA,KAAK,CAAC,IAAI,EAAA,CAAA,yBAAoB,OAAO,CAAC,CAAC;UACvC,OAAO,IAAI,CAAC,MAAM,CAAC;OACpB;MACD,IAAI,KAAK,CAAC,QAAQ,EAAA;;EAEhB,QAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;OACvB;EACF,CAAA;EAEK,SAAU,QAAQ,CAAC,eAAe,EAAA;EACtC,IAAA,IAAI,MAAM,CAAC;EACX,IAAA,IAAI,MAAM,CAAC;EACX,IAAA,IAAI,UAAU,CAAC,eAAe,CAAC,EAAE;;UAE/B,MAAM,GAAG,eAAe,CAAC;UACzB,MAAM,GAAG,MAAK;EACZ,YAAA,OAAO,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC;EAClD,SAAC,CAAC;EACH,KAAA;EAAM,SAAA;EACL,QAAA,MAAM,GAAG,eAAe,CAAC,GAAG,CAAC;EAC7B,QAAA,MAAM,GAAG,eAAe,CAAC,GAAG,CAAC;EAC9B,KAAA;EACD,IAAA,OAAO,IAAI,eAAe,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;EAC7C;;;;;;;;;;;;;;;;;;;;;"}