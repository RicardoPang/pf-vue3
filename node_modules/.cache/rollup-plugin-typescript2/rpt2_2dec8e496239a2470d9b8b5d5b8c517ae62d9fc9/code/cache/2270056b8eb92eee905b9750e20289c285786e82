{"code":"import { effect } from '@vue/reactivity/src';\r\nimport { createAppAPI } from './apiCreateApp';\r\nimport { createComponentInstance, setupComponent } from './component';\r\nimport { queueJob } from './scheduler';\r\nimport { normalizeVNode, Text } from './vnode';\r\nexport function createRenderer(rendererOptions) {\r\n    // 告诉core 怎么渲染\r\n    const { insert: hostInsert, remove: hostRemove, patchProp: hostPatchProp, createElement: hostCreateElement, createText: hostCreateText, createComment: hostCreateComment, setText: hostSetText, setElementText: hostSetElementText, } = rendererOptions;\r\n    // -------------------组件----------------------\r\n    const setupRenderEfect = (instance, container) => {\r\n        // 需要创建一个effect 在effect中调用 render方法，这样render方法中拿到的数据会收集这个effect，属性更新时effect会重新执行\r\n        instance.update = effect(function componentEffect() {\r\n            // 每个组件都有一个effect， vue3 是组件级更新，数据变化会重新执行对应组件的effect\r\n            if (!instance.isMounted) {\r\n                // 初次渲染\r\n                let proxyToUse = instance.proxy;\r\n                // $vnode  _vnode\r\n                // vnode  subTree\r\n                let subTree = (instance.subTree = instance.render.call(proxyToUse, proxyToUse));\r\n                // 用render函数的返回值 继续渲染\r\n                patch(null, subTree, container);\r\n                instance.isMounted = true;\r\n            }\r\n            else {\r\n                // diff算法  （核心 diff + 序列优化 watchApi 生命周期）\r\n                // ts 一周\r\n                // 组件库\r\n                // 更新逻辑\r\n            }\r\n        }, {\r\n            scheduler: queueJob,\r\n        });\r\n    };\r\n    const mountComponent = (initialVNode, container) => {\r\n        // 组件的渲染流程  最核心的就是调用 setup拿到返回值，获取render函数返回的结果来进行渲染\r\n        // 1.先有实例\r\n        const instance = (initialVNode.component =\r\n            createComponentInstance(initialVNode));\r\n        // 2.需要的数据解析到实例上\r\n        setupComponent(instance); // state props attrs render ....\r\n        // 3.创建一个effect 让render函数执行\r\n        setupRenderEfect(instance, container);\r\n    };\r\n    const processComponent = (n1, n2, container) => {\r\n        if (n1 == null) {\r\n            // 组件没有上一次的虚拟节点\r\n            mountComponent(n2, container);\r\n        }\r\n        else {\r\n            // 组件更新流程\r\n        }\r\n    };\r\n    // ------------------组件 ------------------\r\n    //----------------- 处理元素-----------------\r\n    const mountChildren = (children, container) => {\r\n        for (let i = 0; i < children.length; i++) {\r\n            let child = normalizeVNode(children[i]);\r\n            patch(null, child, container);\r\n        }\r\n    };\r\n    const mountElement = (vnode, container) => {\r\n        // 递归渲染\r\n        const { props, shapeFlag, type, children } = vnode;\r\n        let el = (vnode.el = hostCreateElement(type));\r\n        if (props) {\r\n            for (const key in props) {\r\n                hostPatchProp(el, key, null, props[key]);\r\n            }\r\n        }\r\n        if (shapeFlag & 8 /* ShapeFlags.TEXT_CHILDREN */) {\r\n            hostSetElementText(el, children); // 文本比较简单 直接扔进去即可\r\n        }\r\n        else if (shapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */) {\r\n            mountChildren(children, el);\r\n        }\r\n        hostInsert(el, container);\r\n    };\r\n    const processElement = (n1, n2, container) => {\r\n        if (n1 == null) {\r\n            mountElement(n2, container);\r\n        }\r\n        else {\r\n            // 元素更新\r\n        }\r\n    };\r\n    //----------------- 处理元素-----------------\r\n    // -----------------文本处理-----------------\r\n    const processText = (n1, n2, container) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateText(n2.children)), container);\r\n        }\r\n    };\r\n    // -----------------文本处理-----------------\r\n    const patch = (n1, n2, container) => {\r\n        // 针对不同类型 做初始化操作\r\n        const { shapeFlag, type } = n2;\r\n        switch (type) {\r\n            case Text:\r\n                processText(n1, n2, container);\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ShapeFlags.ELEMENT */) {\r\n                    processElement(n1, n2, container);\r\n                }\r\n                else if (shapeFlag & 4 /* ShapeFlags.STATEFUL_COMPONENT */) {\r\n                    processComponent(n1, n2, container);\r\n                }\r\n        }\r\n    };\r\n    const render = (vnode, container) => {\r\n        // core的核心, 根据不同的虚拟节点 创建对应的真实元素\r\n        // 默认调用render 可能是初始化流程\r\n        patch(null, vnode, container);\r\n    };\r\n    return {\r\n        createApp: createAppAPI(render),\r\n    };\r\n}\r\n// createRenderer 目的是创建一个渲染器\r\n// 框架 都是将组件 转化成虚拟DOM -》 虚拟DOM生成真实DOM挂载到真实页面上\r\n//# sourceMappingURL=renderer.js.map","references":["/Users/pangjianfeng/code/pf-vue3-source/vue3-render/packages/reactivity/src/index.ts","/Users/pangjianfeng/code/pf-vue3-source/vue3-render/packages/shared/src/index.ts","/Users/pangjianfeng/code/pf-vue3-source/vue3-render/packages/runtime-core/src/apiCreateApp.ts","/Users/pangjianfeng/code/pf-vue3-source/vue3-render/packages/runtime-core/src/component.ts","/Users/pangjianfeng/code/pf-vue3-source/vue3-render/packages/runtime-core/src/scheduler.ts","/Users/pangjianfeng/code/pf-vue3-source/vue3-render/packages/runtime-core/src/vnode.ts"],"map":"{\"version\":3,\"file\":\"renderer.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../packages/runtime-core/src/renderer.ts\"],\"names\":[],\"mappings\":\"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\"}"}
